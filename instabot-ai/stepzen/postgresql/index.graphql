type Chat_sessions {
  chatbot_id: Int
  created_at: DateTime!
  guest_id: Int
  id: Int!
}

type Chatbot_characteristics {
  chatbot_id: Int
  content: String!
  created_at: DateTime!
  id: Int!
}

type Chatbots {
  clerk_user_id: String!
  created_at: DateTime!
  id: Int!
  name: String!
}

type Guests {
  created_at: DateTime!
  email: String
  id: Int!
  name: String
}

type Messages {
  chat_session_id: Int
  content: String!
  created_at: DateTime!
  id: Int!
  sender: String!
}

"""
The following queries are just a set of examples of how to access your schema.
Feel free to modify them or aggregate more.
"""
type Query {
  " Queries for type 'Chat_sessions' "
  chat_sessionsList: [Chat_sessions]
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "chat_sessions"
      configuration: "postgresql_config"
    )
  chat_sessionsPaginatedList(first: Int, after: Int): [Chat_sessions]
    @dbquery(
      type: "postgresql"
      schema: "public"
      query: """
      SELECT "chatbot_id", "created_at", "guest_id", "id" FROM "chat_sessions" LIMIT $1 OFFSET $2
      """
      configuration: "postgresql_config"
    )
  " Queries for type 'Chatbot_characteristics' "
  chatbot_characteristicsList: [Chatbot_characteristics]
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "chatbot_characteristics"
      configuration: "postgresql_config"
    )
  chatbot_characteristicsPaginatedList(
    first: Int
    after: Int
  ): [Chatbot_characteristics]
    @dbquery(
      type: "postgresql"
      schema: "public"
      query: """
      SELECT "chatbot_id", "content", "created_at", "id" FROM "chatbot_characteristics" LIMIT $1 OFFSET $2
      """
      configuration: "postgresql_config"
    )
  " Queries for type 'Chatbots' "
  chatbotsList: [Chatbots]
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "chatbots"
      configuration: "postgresql_config"
    )
  chatbotsPaginatedList(first: Int, after: Int): [Chatbots]
    @dbquery(
      type: "postgresql"
      schema: "public"
      query: """
      SELECT "clerk_user_id", "created_at", "id", "name" FROM "chatbots" LIMIT $1 OFFSET $2
      """
      configuration: "postgresql_config"
    )
  " Queries for type 'Guests' "
  guestsList: [Guests]
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "guests"
      configuration: "postgresql_config"
    )
  guestsPaginatedList(first: Int, after: Int): [Guests]
    @dbquery(
      type: "postgresql"
      schema: "public"
      query: """
      SELECT "created_at", "email", "id", "name" FROM "guests" LIMIT $1 OFFSET $2
      """
      configuration: "postgresql_config"
    )
  " Queries for type 'Messages' "
  messagesByChat_session_id(chat_session_id: Int!): [Messages]
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "messages"
      configuration: "postgresql_config"
    )
  messagesByChat_session_idAndId(chat_session_id: Int!, id: Int!): [Messages]
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "messages"
      configuration: "postgresql_config"
    )
  messagesList: [Messages]
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "messages"
      configuration: "postgresql_config"
    )
  messagesPaginatedList(first: Int, after: Int): [Messages]
    @dbquery(
      type: "postgresql"
      schema: "public"
      query: """
      SELECT "chat_session_id", "content", "created_at", "id", "sender" FROM "messages" LIMIT $1 OFFSET $2
      """
      configuration: "postgresql_config"
    )
}

"""
The following mutations are just a set of examples of how to access your schema.
Feel free to modify them or aggregate more.
"""
type Mutation {
  " Mutations for type 'Chat_sessions' "
  deleteChat_sessions(
    created_at: DateTime!
    guest_id: Int!
    chatbot_id: Int!
    id: Int!
  ): Chat_sessions
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "chat_sessions"
      dml: DELETE
      configuration: "postgresql_config"
    )
  insertChat_sessions(
    created_at: DateTime!
    guest_id: Int
    chatbot_id: Int
  ): Chat_sessions
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "chat_sessions"
      dml: INSERT
      configuration: "postgresql_config"
    )
  " Mutations for type 'Chatbot_characteristics' "
  deleteChatbot_characteristics(
    created_at: DateTime!
    content: String!
    chatbot_id: Int!
    id: Int!
  ): Chatbot_characteristics
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "chatbot_characteristics"
      dml: DELETE
      configuration: "postgresql_config"
    )
  insertChatbot_characteristics(
    created_at: DateTime!
    content: String!
    chatbot_id: Int
  ): Chatbot_characteristics
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "chatbot_characteristics"
      dml: INSERT
      configuration: "postgresql_config"
    )
  " Mutations for type 'Chatbots' "
  deleteChatbots(
    created_at: DateTime!
    name: String!
    clerk_user_id: String!
    id: Int!
  ): Chatbots
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "chatbots"
      dml: DELETE
      configuration: "postgresql_config"
    )
  insertChatbots(
    created_at: DateTime!
    name: String!
    clerk_user_id: String!
  ): Chatbots
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "chatbots"
      dml: INSERT
      configuration: "postgresql_config"
    )
  " Mutations for type 'Guests' "
  deleteGuests(
    created_at: DateTime!
    email: String!
    name: String!
    id: Int!
  ): Guests
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "guests"
      dml: DELETE
      configuration: "postgresql_config"
    )
  insertGuests(created_at: DateTime!, email: String, name: String): Guests
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "guests"
      dml: INSERT
      configuration: "postgresql_config"
    )
  " Mutations for type 'Messages' "
  deleteMessages(
    chat_session_id: Int!
    id: Int!
    content: String!
    sender: String!
    created_at: DateTime!
  ): Messages
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "messages"
      dml: DELETE
      configuration: "postgresql_config"
    )
  insertMessages(
    chat_session_id: Int
    content: String!
    sender: String!
    created_at: DateTime!
  ): Messages
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "messages"
      dml: INSERT
      configuration: "postgresql_config"
    )
}
